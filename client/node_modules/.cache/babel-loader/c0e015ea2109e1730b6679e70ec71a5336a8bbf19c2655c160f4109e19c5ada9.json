{"ast":null,"code":"var _jsxFileName = \"/Users/kamryn/Development/code/Phase-5/phase-5-project/client/src/components/Post/NewPostForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction NewPostForm({\n  setAddBtn\n}) {\n  _s();\n  const [numOfAnimals, setNumOfAnimals] = useState(1);\n  function imageView() {\n    if (numOfAnimals === 2) {\n      return /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"imgTwo\",\n        type: \"text\",\n        placeholder: \"Second Animal Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this);\n    } else if (numOfAnimals === 3) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"imgTwo\",\n          type: \"text\",\n          placeholder: \"Second Animal Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"imgThree\",\n          type: \"text\",\n          placeholder: \"Third Animal Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true);\n    }\n  }\n  const formSchema = yup.object().shape({\n    title: yup.string().required(\"Please give your post a title\"),\n    postBody: yup.string().required(\"Please enter text for your post\").min(10, \"Must have at least 10 characters\").max(200, \"Must not exceed 200 characters\"),\n    imgOne: yup.string().required(\"Must have at least one Animals image\"),\n    imgTwo: yup.string(),\n    imgThree: yup.string()\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setAddBtn(false),\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ADD A POST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Max Animals Per Post is 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"title\",\n          type: \"text\",\n          placeholder: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"postBody\",\n          type: \"text\",\n          placeholder: \"Body\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"numOfAnimals\",\n          onChange: e => console.log(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            disabled: true,\n            children: \"Select Number of Animals\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: 1,\n            children: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: 2,\n            children: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: 3,\n            children: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"imgOne\",\n          type: \"text\",\n          placeholder: \"First Animal Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), imageView()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(NewPostForm, \"MLui0MNK6FbKWI/tcExcp7LxIdM=\");\n_c = NewPostForm;\nexport default NewPostForm;\nvar _c;\n$RefreshReg$(_c, \"NewPostForm\");","map":{"version":3,"names":["React","useState","useFormik","yup","jsxDEV","_jsxDEV","Fragment","_Fragment","NewPostForm","setAddBtn","_s","numOfAnimals","setNumOfAnimals","imageView","name","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","children","formSchema","object","shape","title","string","required","postBody","min","max","imgOne","imgTwo","imgThree","onClick","onChange","e","console","log","target","value","disabled","_c","$RefreshReg$"],"sources":["/Users/kamryn/Development/code/Phase-5/phase-5-project/client/src/components/Post/NewPostForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\n\nfunction NewPostForm({setAddBtn}) {\n    const [numOfAnimals, setNumOfAnimals] = useState(1)\n\n    function imageView() {\n        if (numOfAnimals === 2) {\n            return (\n                <input name=\"imgTwo\" type=\"text\" placeholder=\"Second Animal Image\" />\n            )\n        }\n        else if (numOfAnimals === 3) {\n            return (\n                <>\n                    <input name=\"imgTwo\" type=\"text\" placeholder=\"Second Animal Image\" />\n                    <input name=\"imgThree\" type=\"text\" placeholder=\"Third Animal Image\" />\n                </>\n            )\n        }\n    }\n\n    const formSchema = yup.object().shape({\n        title: yup.string().required(\"Please give your post a title\"),\n        postBody: yup.string().required(\"Please enter text for your post\").min(10, \"Must have at least 10 characters\").max(200, \"Must not exceed 200 characters\"),\n        imgOne: yup.string().required(\"Must have at least one Animals image\"),\n        imgTwo: yup.string(),\n        imgThree: yup.string()\n    })\n\n\n    return (\n        <>\n            <button onClick={() => setAddBtn(false)}>-</button>\n            <div>\n                <h1>ADD A POST</h1>\n                <h2>Max Animals Per Post is 3</h2>\n                <br />\n\n                <form>\n                    <input name=\"title\" type=\"text\" placeholder=\"Title\"/>\n\n                    <input name=\"postBody\" type=\"text\" placeholder=\"Body\"/>\n\n                    <select name=\"numOfAnimals\" onChange={(e) => console.log(e.target.value)}>\n                        <option disabled>Select Number of Animals</option>\n                        <option value={1}>1</option>\n                        <option value={2}>2</option>\n                        <option value={3}>3</option>\n                    </select>\n\n                    <input name=\"imgOne\" type=\"text\" placeholder=\"First Animal Image\" />\n\n                    {imageView()}\n                </form>\n            </div>\n        </>\n    )\n}\n\nexport default NewPostForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}