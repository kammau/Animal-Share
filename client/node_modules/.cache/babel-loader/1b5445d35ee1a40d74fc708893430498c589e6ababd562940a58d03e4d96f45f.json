{"ast":null,"code":"var _jsxFileName = \"/Users/kamryn/Development/code/Phase-5/phase-5-project/client/src/components/TaggedAnimals.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport TaggedAnimalCard from \"./TaggedAnimalCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaggedAnimals() {\n  _s();\n  const [taggedAnimals, setTaggedAnimals] = useState();\n  const [noAnimals, setNoAnimals] = useState(false);\n  useEffect(() => {\n    fetch(\"/tagged_animals\").then(res => res.json()).then(res => setTaggedAnimals(res));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [taggedAnimals ? taggedAnimals.map(animal => {\n      return /*#__PURE__*/_jsxDEV(TaggedAnimalCard, {\n        animal: animal,\n        setTaggedAnimals: setTaggedAnimals\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this);\n    }) : setNoAnimals(true), noAnimals ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Looks like you dont have any tagged animals\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 26\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Welcome\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 81\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n_s(TaggedAnimals, \"qmpYfE+AtS06svLloF8emNBg5co=\");\n_c = TaggedAnimals;\nexport default TaggedAnimals;\nvar _c;\n$RefreshReg$(_c, \"TaggedAnimals\");","map":{"version":3,"names":["React","useEffect","useState","TaggedAnimalCard","jsxDEV","_jsxDEV","TaggedAnimals","_s","taggedAnimals","setTaggedAnimals","noAnimals","setNoAnimals","fetch","then","res","json","children","map","animal","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kamryn/Development/code/Phase-5/phase-5-project/client/src/components/TaggedAnimals.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport TaggedAnimalCard from \"./TaggedAnimalCard\";\n\nfunction TaggedAnimals() {\n    const [taggedAnimals, setTaggedAnimals] = useState()\n    const [noAnimals, setNoAnimals] = useState(false)\n\n    useEffect(() => {\n        fetch(\"/tagged_animals\")\n        .then((res) => res.json())\n        .then((res) => setTaggedAnimals(res))\n    }, [])\n\n    return (\n        <div>\n            {taggedAnimals ? taggedAnimals.map((animal) => {\n                return (\n                    <TaggedAnimalCard animal={animal} setTaggedAnimals={setTaggedAnimals}/>\n                )\n            }) : setNoAnimals(true)}\n            {noAnimals ? <h1>Looks like you dont have any tagged animals</h1> : <p>Welcome</p>}\n        </div>\n    )\n}\n\nexport default TaggedAnimals;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,gBAAgB,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,CAAC;EACpD,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEjDD,SAAS,CAAC,MAAM;IACZW,KAAK,CAAC,iBAAiB,CAAC,CACvBC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEC,GAAG,IAAKL,gBAAgB,CAACK,GAAG,CAAC,CAAC;EACzC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIT,OAAA;IAAAW,QAAA,GACKR,aAAa,GAAGA,aAAa,CAACS,GAAG,CAAEC,MAAM,IAAK;MAC3C,oBACIb,OAAA,CAACF,gBAAgB;QAACe,MAAM,EAAEA,MAAO;QAACT,gBAAgB,EAAEA;MAAiB;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAE/E,CAAC,CAAC,GAAGX,YAAY,CAAC,IAAI,CAAC,EACtBD,SAAS,gBAAGL,OAAA;MAAAW,QAAA,EAAI;IAA2C;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,gBAAGjB,OAAA;MAAAW,QAAA,EAAG;IAAO;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjF,CAAC;AAEd;AAACf,EAAA,CApBQD,aAAa;AAAAiB,EAAA,GAAbjB,aAAa;AAsBtB,eAAeA,aAAa;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}