{"ast":null,"code":"var _jsxFileName = \"/Users/kamryn/Development/code/Phase-5/phase-5-project/client/src/components/Message/SpecificMessage.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport * as yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport store from \"../../store\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SpecificMessage() {\n  _s();\n  let recieverStore = useSelector(() => store.getState().sendTo.value);\n  const formSchema = yup.object().shape({\n    messageTitle: yup.string().required(\"Please enter a title\"),\n    messageBody: yup.string().required(\"Please enter a message body\")\n  });\n  const formik = useFormik({\n    initialValues: {\n      messageTitle: \"\",\n      messageBody: \"\"\n    },\n    validationSchema: formSchema,\n    onSubmit: (values, {\n      resetForm\n    }) => {\n      fetch(\"/messages\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          messageTitle: values.messageTitle,\n          messageBody: values.messageBody,\n          reciever: recieverStore\n        })\n      });\n      resetForm();\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"messageTitle\",\n        onChange: formik.handleChange,\n        value: formik.values.messageTitle,\n        className: \"specific_msg_in\",\n        placeholder: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"5\",\n        cols: \"33\",\n        name: \"messageBody\",\n        onChange: formik.handleChange,\n        value: formik.values.messageBody,\n        className: \"specific_msg_in\",\n        placeholder: \"Body\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"animal_msg_btns\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(SpecificMessage, \"A5r8vL6Cd8C05V7VcGxvjWXdJ8Y=\", false, function () {\n  return [useSelector, useFormik];\n});\n_c = SpecificMessage;\nexport default SpecificMessage;\nvar _c;\n$RefreshReg$(_c, \"SpecificMessage\");","map":{"version":3,"names":["React","yup","useFormik","store","useSelector","jsxDEV","_jsxDEV","Fragment","_Fragment","SpecificMessage","_s","recieverStore","getState","sendTo","value","formSchema","object","shape","messageTitle","string","required","messageBody","formik","initialValues","validationSchema","onSubmit","values","resetForm","fetch","method","headers","body","JSON","stringify","reciever","children","handleSubmit","autoComplete","type","name","onChange","handleChange","className","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","rows","cols","_c","$RefreshReg$"],"sources":["/Users/kamryn/Development/code/Phase-5/phase-5-project/client/src/components/Message/SpecificMessage.js"],"sourcesContent":["import React from \"react\";\nimport * as yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport store from \"../../store\";\nimport { useSelector } from \"react-redux\";\n\n\nfunction SpecificMessage() {\n\n    let recieverStore = useSelector(() => store.getState().sendTo.value)\n    \n    const formSchema = yup.object().shape({\n        messageTitle: yup.string().required(\"Please enter a title\"),\n        messageBody: yup.string().required(\"Please enter a message body\")\n    })\n\n    const formik = useFormik({\n        initialValues: {\n            messageTitle: \"\",\n            messageBody: \"\"\n        },\n        validationSchema: formSchema,\n        onSubmit: (values, {resetForm}) => {\n            fetch(\"/messages\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({\n                    messageTitle: values.messageTitle,\n                    messageBody: values.messageBody,\n                    reciever: recieverStore\n                })\n            })\n\n            resetForm()\n        }\n    })\n\n    return (\n        <>\n            <form onSubmit={formik.handleSubmit} autoComplete=\"off\">\n                <input type=\"text\" name=\"messageTitle\" onChange={formik.handleChange} value={formik.values.messageTitle} className=\"specific_msg_in\" placeholder=\"Title\"/>\n\n                <textarea rows=\"5\" cols=\"33\" name=\"messageBody\" onChange={formik.handleChange} value={formik.values.messageBody} className=\"specific_msg_in\" placeholder=\"Body\"></textarea>\n\n                <button type=\"submit\" className=\"animal_msg_btns\">Send</button>\n            </form>\n        </>\n    )\n}\n\nexport default SpecificMessage;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,SAASC,SAAS,QAAQ,QAAQ;AAClC,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG1C,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EAEvB,IAAIC,aAAa,GAAGP,WAAW,CAAC,MAAMD,KAAK,CAACS,QAAQ,CAAC,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAEpE,MAAMC,UAAU,GAAGd,GAAG,CAACe,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC;IAClCC,YAAY,EAAEjB,GAAG,CAACkB,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,sBAAsB,CAAC;IAC3DC,WAAW,EAAEpB,GAAG,CAACkB,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,6BAA6B;EACpE,CAAC,CAAC;EAEF,MAAME,MAAM,GAAGpB,SAAS,CAAC;IACrBqB,aAAa,EAAE;MACXL,YAAY,EAAE,EAAE;MAChBG,WAAW,EAAE;IACjB,CAAC;IACDG,gBAAgB,EAAET,UAAU;IAC5BU,QAAQ,EAAEA,CAACC,MAAM,EAAE;MAACC;IAAS,CAAC,KAAK;MAC/BC,KAAK,CAAC,WAAW,EAAE;QACfC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBf,YAAY,EAAEQ,MAAM,CAACR,YAAY;UACjCG,WAAW,EAAEK,MAAM,CAACL,WAAW;UAC/Ba,QAAQ,EAAEvB;QACd,CAAC;MACL,CAAC,CAAC;MAEFgB,SAAS,CAAC,CAAC;IACf;EACJ,CAAC,CAAC;EAEF,oBACIrB,OAAA,CAAAE,SAAA;IAAA2B,QAAA,eACI7B,OAAA;MAAMmB,QAAQ,EAAEH,MAAM,CAACc,YAAa;MAACC,YAAY,EAAC,KAAK;MAAAF,QAAA,gBACnD7B,OAAA;QAAOgC,IAAI,EAAC,MAAM;QAACC,IAAI,EAAC,cAAc;QAACC,QAAQ,EAAElB,MAAM,CAACmB,YAAa;QAAC3B,KAAK,EAAEQ,MAAM,CAACI,MAAM,CAACR,YAAa;QAACwB,SAAS,EAAC,iBAAiB;QAACC,WAAW,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAE1JzC,OAAA;QAAU0C,IAAI,EAAC,GAAG;QAACC,IAAI,EAAC,IAAI;QAACV,IAAI,EAAC,aAAa;QAACC,QAAQ,EAAElB,MAAM,CAACmB,YAAa;QAAC3B,KAAK,EAAEQ,MAAM,CAACI,MAAM,CAACL,WAAY;QAACqB,SAAS,EAAC,iBAAiB;QAACC,WAAW,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CAAC,eAE3KzC,OAAA;QAAQgC,IAAI,EAAC,QAAQ;QAACI,SAAS,EAAC,iBAAiB;QAAAP,QAAA,EAAC;MAAI;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D;EAAC,gBACT,CAAC;AAEX;AAACrC,EAAA,CA3CQD,eAAe;EAAA,QAEAL,WAAW,EAOhBF,SAAS;AAAA;AAAAgD,EAAA,GATnBzC,eAAe;AA6CxB,eAAeA,eAAe;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}