{"ast":null,"code":"var _jsxFileName = \"/Users/kamryn/Development/code/Phase-5/phase-5-project/client/src/components/NewMessage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewMessage() {\n  _s();\n  const [users, setUsers] = useState();\n  useEffect(() => {\n    fetch(\"/users\").then(res => res.json()).then(res => setUsers(res));\n  }, []);\n  const formSchema = yup.object().shape({\n    messageTitle: yup.string().required(\"Please enter a title\"),\n    messageBody: yup.string().required(\"Please enter a message body\"),\n    reciever: yup.string().required(\"Please select someone to send the message to\")\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          selected: true,\n          children: \"To\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), users ? users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: user.username,\n          children: user.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 50\n        }, this)) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"5\",\n        cols: \"33\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n_s(NewMessage, \"LQkddvx2HtKGflMjzZE1OVCsOUU=\");\n_c = NewMessage;\nexport default NewMessage;\nvar _c;\n$RefreshReg$(_c, \"NewMessage\");","map":{"version":3,"names":["React","useEffect","useState","useFormik","yup","jsxDEV","_jsxDEV","NewMessage","_s","users","setUsers","fetch","then","res","json","formSchema","object","shape","messageTitle","string","required","messageBody","reciever","children","type","fileName","_jsxFileName","lineNumber","columnNumber","value","disabled","selected","map","user","username","rows","cols","_c","$RefreshReg$"],"sources":["/Users/kamryn/Development/code/Phase-5/phase-5-project/client/src/components/NewMessage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\n\nfunction NewMessage() {\n    const [users, setUsers] = useState();\n\n    useEffect(() => {\n        fetch(\"/users\")\n        .then((res) => res.json())\n        .then((res) => setUsers(res))\n    }, [])\n\n    const formSchema = yup.object().shape({\n        messageTitle: yup.string().required(\"Please enter a title\"),\n        messageBody: yup.string().required(\"Please enter a message body\"),\n        reciever: yup.string().required(\"Please select someone to send the message to\")\n    })\n\n\n    return (\n        <div>\n            <form>\n                <input type=\"text\" />\n\n                <select>\n                    <option value=\"\" disabled selected>To</option>\n                    {users ? users.map((user) => <option value={user.username}>{user.username}</option>) : null}\n                </select>\n\n                <textarea rows=\"5\" cols=\"33\"></textarea>\n            </form>\n        </div>\n    )\n}\n\nexport default NewMessage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,QAAQ;AAClC,OAAO,KAAKC,GAAG,MAAM,KAAK;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACZU,KAAK,CAAC,QAAQ,CAAC,CACdC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEC,GAAG,IAAKH,QAAQ,CAACG,GAAG,CAAC,CAAC;EACjC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,UAAU,GAAGX,GAAG,CAACY,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC;IAClCC,YAAY,EAAEd,GAAG,CAACe,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,sBAAsB,CAAC;IAC3DC,WAAW,EAAEjB,GAAG,CAACe,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,6BAA6B,CAAC;IACjEE,QAAQ,EAAElB,GAAG,CAACe,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,8CAA8C;EAClF,CAAC,CAAC;EAGF,oBACId,OAAA;IAAAiB,QAAA,eACIjB,OAAA;MAAAiB,QAAA,gBACIjB,OAAA;QAAOkB,IAAI,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAErBtB,OAAA;QAAAiB,QAAA,gBACIjB,OAAA;UAAQuB,KAAK,EAAC,EAAE;UAACC,QAAQ;UAACC,QAAQ;UAAAR,QAAA,EAAC;QAAE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAC7CnB,KAAK,GAAGA,KAAK,CAACuB,GAAG,CAAEC,IAAI,iBAAK3B,OAAA;UAAQuB,KAAK,EAAEI,IAAI,CAACC,QAAS;UAAAX,QAAA,EAAEU,IAAI,CAACC;QAAQ;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,CAAC,GAAG,IAAI;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvF,CAAC,eAETtB,OAAA;QAAU6B,IAAI,EAAC,GAAG;QAACC,IAAI,EAAC;MAAI;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd;AAACpB,EAAA,CA9BQD,UAAU;AAAA8B,EAAA,GAAV9B,UAAU;AAgCnB,eAAeA,UAAU;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}