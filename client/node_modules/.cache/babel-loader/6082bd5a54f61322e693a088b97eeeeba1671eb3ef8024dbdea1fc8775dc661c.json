{"ast":null,"code":"var _jsxFileName = \"/Users/kamryn/Development/code/Phase-5/phase-5-project/client/src/components/Post/NewPostForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction NewPostForm({\n  setAddBtn\n}) {\n  _s();\n  const [animals, setAnimals] = useState();\n  useEffect(() => {\n    fetch(\"/my_account\").then(res => res.json()).then(res => console.log(res));\n  });\n  const formSchema = yup.object().shape({\n    title: yup.string().required(\"Please give your post a title\"),\n    postBody: yup.string().required(\"Please enter text for your post\").min(10, \"Must have at least 10 characters\").max(200, \"Must not exceed 200 characters\"),\n    numOfAnimals: yup.number().required(\"Please enter number of animals in post\"),\n    imgOne: yup.string().required(\"Must have at least one Animals image\"),\n    imgTwo: yup.string().notRequired(),\n    imgThree: yup.string().notRequired()\n  });\n  const formik = useFormik({\n    initialValues: {\n      title: \"\",\n      postBody: \"\",\n      numOfAnimals: 1,\n      imgOne: \"\",\n      imgTwo: \"\",\n      imgThree: \"\"\n    },\n    validationSchema: formSchema,\n    onSubmit: values => {\n      fetch(\"/posts\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(values)\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setAddBtn(false),\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ADD A POST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Max Animals Per Post is 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formik.handleSubmit,\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"title\",\n          type: \"text\",\n          placeholder: \"Title\",\n          value: formik.values.title,\n          onChange: formik.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: formik.errors.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"postBody\",\n          type: \"text\",\n          placeholder: \"Body\",\n          value: formik.values.postBody,\n          onChange: formik.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: formik.errors.postBody\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"numOfAnimals\",\n          onChange: formik.handleChange,\n          values: formik.values.numOfAnimals,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            disabled: true,\n            children: \"Select Number of Animals\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            name: \"one\",\n            value: 1,\n            children: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            name: \"two\",\n            value: 2,\n            children: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            name: \"three\",\n            value: 3,\n            children: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: formik.errors.numOfAnimals\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          children: /*#__PURE__*/_jsxDEV(\"option\", {\n            hidden: true,\n            disabled: true,\n            children: \"Animals\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"imgOne\",\n          type: \"text\",\n          placeholder: \"First Animal Image\",\n          value: formik.values.imgOne,\n          onChange: formik.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: formik.errors.imgOne\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"imgTwo\",\n          type: \"text\",\n          placeholder: \"Second Animal Image (Optional)\",\n          value: formik.values.imgTwo,\n          onChange: formik.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"imgThree\",\n          type: \"text\",\n          placeholder: \"Third Animal Image (Optional)\",\n          value: formik.values.imgThree,\n          onChange: formik.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(NewPostForm, \"IV672l4ZzqyIJPkWV+O9tdSS2Do=\", false, function () {\n  return [useFormik];\n});\n_c = NewPostForm;\nexport default NewPostForm;\nvar _c;\n$RefreshReg$(_c, \"NewPostForm\");","map":{"version":3,"names":["React","useEffect","useState","useFormik","yup","jsxDEV","_jsxDEV","Fragment","_Fragment","NewPostForm","setAddBtn","_s","animals","setAnimals","fetch","then","res","json","console","log","formSchema","object","shape","title","string","required","postBody","min","max","numOfAnimals","number","imgOne","imgTwo","notRequired","imgThree","formik","initialValues","validationSchema","onSubmit","values","method","headers","body","JSON","stringify","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","handleSubmit","autoComplete","name","type","placeholder","value","onChange","handleChange","errors","disabled","hidden","_c","$RefreshReg$"],"sources":["/Users/kamryn/Development/code/Phase-5/phase-5-project/client/src/components/Post/NewPostForm.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\n\nfunction NewPostForm({setAddBtn}) {\n    const [animals, setAnimals] = useState()\n\n    useEffect(() => {\n        fetch(\"/my_account\")\n        .then((res) => res.json())\n        .then((res) => console.log(res))\n    })\n\n    const formSchema = yup.object().shape({\n        title: yup.string().required(\"Please give your post a title\"),\n        postBody: yup.string().required(\"Please enter text for your post\").min(10, \"Must have at least 10 characters\").max(200, \"Must not exceed 200 characters\"),\n        numOfAnimals: yup.number().required(\"Please enter number of animals in post\"),\n        imgOne: yup.string().required(\"Must have at least one Animals image\"),\n        imgTwo: yup.string().notRequired(),\n        imgThree: yup.string().notRequired()\n    })\n\n    const formik = useFormik({\n        initialValues: {\n            title: \"\",\n            postBody: \"\",\n            numOfAnimals: 1,\n            imgOne: \"\",\n            imgTwo: \"\",\n            imgThree: \"\"\n        },\n        validationSchema: formSchema,\n        onSubmit: (values) => {\n            fetch(\"/posts\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(values)\n            })\n        }\n    })\n\n\n    return (\n        <>\n            <button onClick={() => setAddBtn(false)}>-</button>\n            <div>\n                <h1>ADD A POST</h1>\n                <h2>Max Animals Per Post is 3</h2>\n                <br />\n\n                <form onSubmit={formik.handleSubmit} autoComplete=\"off\">\n                    <input name=\"title\" type=\"text\" placeholder=\"Title\" value={formik.values.title} onChange={formik.handleChange}/>\n                    <p>{formik.errors.title}</p>\n\n                    <input name=\"postBody\" type=\"text\" placeholder=\"Body\" value={formik.values.postBody} onChange={formik.handleChange}/>\n                    <p>{formik.errors.postBody}</p>\n\n                    <select name=\"numOfAnimals\" onChange={formik.handleChange} values={formik.values.numOfAnimals}>\n                        <option disabled>Select Number of Animals</option>\n                        <option name=\"one\" value={1}>1</option>\n                        <option name=\"two\" value={2}>2</option>\n                        <option name=\"three\" value={3}>3</option>\n                    </select>\n                    <p>{formik.errors.numOfAnimals}</p>\n\n                    <select>\n                        <option hidden disabled>Animals</option>\n                    </select>\n\n                    <input name=\"imgOne\" type=\"text\" placeholder=\"First Animal Image\" value={formik.values.imgOne} onChange={formik.handleChange}/>\n                    <p>{formik.errors.imgOne}</p>\n\n                    <input name=\"imgTwo\" type=\"text\" placeholder=\"Second Animal Image (Optional)\" value={formik.values.imgTwo} onChange={formik.handleChange}/>\n                    <input name=\"imgThree\" type=\"text\" placeholder=\"Third Animal Image (Optional)\" value={formik.values.imgThree} onChange={formik.handleChange}/>\n                    \n                    <button type=\"submit\">Post</button>\n                </form>\n            </div>\n        </>\n    )\n}\n\nexport default NewPostForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}