{"ast":null,"code":"var _jsxFileName = \"/Users/kamryn/Development/code/Phase-5/phase-5-project/client/src/components/User/UserAnimals.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport UserAnimalCard from \"./UserAnimalCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction UserAnimals({\n  user\n}) {\n  _s();\n  const [animals, setAnimals] = useState();\n  function handleUpdate(updatedAnimal) {\n    let filteredAnimals = animals.filter(animal => animal.id !== updatedAnimal.id);\n    setAnimals([updatedAnimal, ...filteredAnimals]);\n  }\n  function handleDelete(deletedAnimal) {\n    fetch(`/my_account/animals/${deletedAnimal.id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    let filteredAnimals = animals.filter(animal => animal.id !== deletedAnimal.id);\n    setAnimals([...filteredAnimals]);\n  }\n  useEffect(() => {\n    fetch(\"/my_account/animals\").then(res => res.json()).then(res => setAnimals(res));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [user.username, \" Animals\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), animals ? animals.map(animal => /*#__PURE__*/_jsxDEV(UserAnimalCard, {\n      animal: animal,\n      handleUpdate: handleUpdate,\n      handleDelete: handleDelete\n    }, animal.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 48\n    }, this)) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Looks like you don't have any animals!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 156\n    }, this)]\n  }, void 0, true);\n}\n_s(UserAnimals, \"o6fac3WBHa00p82xNHWCkJnT1so=\");\n_c = UserAnimals;\nexport default UserAnimals;\nvar _c;\n$RefreshReg$(_c, \"UserAnimals\");","map":{"version":3,"names":["React","useEffect","useState","UserAnimalCard","jsxDEV","_jsxDEV","Fragment","_Fragment","UserAnimals","user","_s","animals","setAnimals","handleUpdate","updatedAnimal","filteredAnimals","filter","animal","id","handleDelete","deletedAnimal","fetch","method","headers","then","res","json","children","username","fileName","_jsxFileName","lineNumber","columnNumber","map","_c","$RefreshReg$"],"sources":["/Users/kamryn/Development/code/Phase-5/phase-5-project/client/src/components/User/UserAnimals.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport UserAnimalCard from \"./UserAnimalCard\";\n\n\nfunction UserAnimals({user}) {\n    const [animals, setAnimals] = useState()\n\n    function handleUpdate(updatedAnimal) {\n        let filteredAnimals = animals.filter((animal) => animal.id !== updatedAnimal.id)\n        setAnimals([updatedAnimal, ...filteredAnimals])\n    }\n\n    function handleDelete(deletedAnimal) {\n        fetch(`/my_account/animals/${deletedAnimal.id}`, {\n            method: \"DELETE\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        })\n        \n        let filteredAnimals = animals.filter((animal) => animal.id !== deletedAnimal.id)\n        setAnimals([...filteredAnimals])\n    }\n    \n    useEffect(() => {\n        fetch(\"/my_account/animals\")\n        .then((res) => res.json())\n        .then((res) => setAnimals(res))\n    }, [])\n\n    return (\n        <>\n            <h1>{user.username} Animals</h1>\n            {animals ? animals.map((animal) => <UserAnimalCard key={animal.id} animal={animal} handleUpdate={handleUpdate} handleDelete={handleDelete}/>): <h2>Looks like you don't have any animals!</h2>}\n        </>\n    )\n}\n\nexport default UserAnimals;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG9C,SAASC,WAAWA,CAAC;EAACC;AAAI,CAAC,EAAE;EAAAC,EAAA;EACzB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,CAAC;EAExC,SAASW,YAAYA,CAACC,aAAa,EAAE;IACjC,IAAIC,eAAe,GAAGJ,OAAO,CAACK,MAAM,CAAEC,MAAM,IAAKA,MAAM,CAACC,EAAE,KAAKJ,aAAa,CAACI,EAAE,CAAC;IAChFN,UAAU,CAAC,CAACE,aAAa,EAAE,GAAGC,eAAe,CAAC,CAAC;EACnD;EAEA,SAASI,YAAYA,CAACC,aAAa,EAAE;IACjCC,KAAK,CAAE,uBAAsBD,aAAa,CAACF,EAAG,EAAC,EAAE;MAC7CI,MAAM,EAAE,QAAQ;MAChBC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IAEF,IAAIR,eAAe,GAAGJ,OAAO,CAACK,MAAM,CAAEC,MAAM,IAAKA,MAAM,CAACC,EAAE,KAAKE,aAAa,CAACF,EAAE,CAAC;IAChFN,UAAU,CAAC,CAAC,GAAGG,eAAe,CAAC,CAAC;EACpC;EAEAd,SAAS,CAAC,MAAM;IACZoB,KAAK,CAAC,qBAAqB,CAAC,CAC3BG,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEC,GAAG,IAAKb,UAAU,CAACa,GAAG,CAAC,CAAC;EACnC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIpB,OAAA,CAAAE,SAAA;IAAAoB,QAAA,gBACItB,OAAA;MAAAsB,QAAA,GAAKlB,IAAI,CAACmB,QAAQ,EAAC,UAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC/BrB,OAAO,GAAGA,OAAO,CAACsB,GAAG,CAAEhB,MAAM,iBAAKZ,OAAA,CAACF,cAAc;MAAiBc,MAAM,EAAEA,MAAO;MAACJ,YAAY,EAAEA,YAAa;MAACM,YAAY,EAAEA;IAAa,GAAlFF,MAAM,CAACC,EAAE;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA0E,CAAC,CAAC,gBAAE3B,OAAA;MAAAsB,QAAA,EAAI;IAAsC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA,eAChM,CAAC;AAEX;AAACtB,EAAA,CAhCQF,WAAW;AAAA0B,EAAA,GAAX1B,WAAW;AAkCpB,eAAeA,WAAW;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}