{"ast":null,"code":"var _jsxFileName = \"/Users/kamryn/Development/code/Phase-5/phase-5-project/client/src/components/NewMessage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewMessage() {\n  _s();\n  const [users, setUsers] = useState();\n  useEffect(() => {\n    fetch(\"/users\").then(res => res.json()).then(res => setUsers(res));\n  }, []);\n  const formSchema = yup.object().shape({\n    messageTitle: yup.string().required(\"Please enter a title\"),\n    messageBody: yup.string().required(\"Please enter a message body\"),\n    reciever: yup.string().required(\"Please select someone to send the message to\")\n  });\n  const formik = useFormik({\n    initialValues: {\n      messageTitle: \"\",\n      messageBody: \"\",\n      reciever: \"\"\n    },\n    validationSchema: formSchema,\n    onSubmit: values => {\n      console.log(values);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"message_title\",\n        onChange: formik.handleChange,\n        value: formik.values.messageTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"select_user\",\n        onChange: formik.handleChange,\n        values: formik.values.reciever,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          selected: true,\n          children: \"To\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), users ? users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n          name: \"option\",\n          value: user.username,\n          children: user.username\n        }, user.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 50\n        }, this)) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"5\",\n        cols: \"33\",\n        name: \"messageBody\",\n        onChange: formik.handleChange,\n        value: formik.values.messageBody\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(NewMessage, \"iRQ6KFBoe3igUkZd3wnA9UUGK5I=\", false, function () {\n  return [useFormik];\n});\n_c = NewMessage;\nexport default NewMessage;\nvar _c;\n$RefreshReg$(_c, \"NewMessage\");","map":{"version":3,"names":["React","useEffect","useState","useFormik","yup","jsxDEV","_jsxDEV","NewMessage","_s","users","setUsers","fetch","then","res","json","formSchema","object","shape","messageTitle","string","required","messageBody","reciever","formik","initialValues","validationSchema","onSubmit","values","console","log","children","handleSubmit","autoComplete","type","name","onChange","handleChange","value","fileName","_jsxFileName","lineNumber","columnNumber","disabled","selected","map","user","username","id","rows","cols","_c","$RefreshReg$"],"sources":["/Users/kamryn/Development/code/Phase-5/phase-5-project/client/src/components/NewMessage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\n\nfunction NewMessage() {\n    const [users, setUsers] = useState();\n\n    useEffect(() => {\n        fetch(\"/users\")\n        .then((res) => res.json())\n        .then((res) => setUsers(res))\n    }, [])\n\n    const formSchema = yup.object().shape({\n        messageTitle: yup.string().required(\"Please enter a title\"),\n        messageBody: yup.string().required(\"Please enter a message body\"),\n        reciever: yup.string().required(\"Please select someone to send the message to\")\n    })\n\n    const formik = useFormik({\n        initialValues: {\n            messageTitle: \"\",\n            messageBody: \"\",\n            reciever: \"\"\n        },\n        validationSchema: formSchema,\n        onSubmit: (values) => {\n            console.log(values)\n        }\n    })\n\n\n    return (\n        <div>\n            <form onSubmit={formik.handleSubmit} autoComplete=\"off\">\n                <input type=\"text\" name=\"message_title\" onChange={formik.handleChange} value={formik.values.messageTitle}/>\n\n                <select name=\"select_user\" onChange={formik.handleChange} values={formik.values.reciever}>\n                    <option value=\"\" disabled selected>To</option>\n                    {users ? users.map((user) => <option key={user.id} name=\"option\" value={user.username}>{user.username}</option>) : null}\n                </select>\n\n                <textarea rows=\"5\" cols=\"33\" name=\"messageBody\" onChange={formik.handleChange} value={formik.values.messageBody}></textarea>\n\n                <button type=\"submit\">Send</button>\n            </form>\n        </div>\n    )\n}\n\nexport default NewMessage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}